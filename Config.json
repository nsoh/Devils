{
    "new" : [
        {
            "Type" : "service",
            "ProcessTasks" : [
                {
                    "FileName" : "dotnet",
                    "Arguments" : "new classlib -o ${command:path}${command:service}"                     
                }
            ],
            "GenerateTasks" : [
                {
                    "FileName" : "${command:path}${command:service}/service.config.json",
                    "Arguments" : [
                        "{",
                        "   \"version\" : \"0.0.1\",",
                        "   \"service\" : \"${command:service}\"",
                        "}"
                    ]
                }
            ]
        },
        {
            "Type" : "action",
            "ProcessTasks" : [],
            "GenerateTasks" : [
                {
                    "FileName" : "${command:path}/${command:action}Action.cs",
                    "Arguments" : [
                        "using System;",
                        "using DevilCore;",
                        "",
                        "namespace ${config:service}",
                        "{",
                        "   public delegate void ${command:action}ActionCallback(GameContext gameContext, ${command:action}Response response);",
                        "",
                        "   public class ${command:action}Action",
                        "       : IAction<${command:action}Request, ${command:action}Response>",
                        "   {",
                        "       public ${command:action}ActionCallback On${command:action}ActionCallback;",
                        "       ",
                        "       public ${command:action}Response OnRequest(GameContext gameContext, ${command:action}Request request)",
                        "       {",
                        "           ${command:action}Response response = new ${command:action}Response();",
                        "           ",
                        "           // TODO : request 정보를 이용해 gameContext를 업데이트한다.",
                        "           ",
                        "           return response;",
                        "       }",
                        "       ",
                        "       ",
                        "       public void OnResponse(GameContext gameContext, ${command:action}Response response)",
                        "       {",
                        "           ",
                        "           // TODO : request 정보를 이용해 gameContext를 업데이트한다.",
                        "           ",
                        "           if(On${command:action}ActionCallback != null) {",
                        "               On${command:action}ActionCallback(gameContext, response);",
                        "           }",
                        "       }",
                        "   }",
                        "}"
                    ]
                },
                {
                    "FileName" : "${command:path}/${command:action}.config.json",
                    "Arguments" : [
                        "{",
                        "   \"${command:action}Request\" : ",
                        "       {",
                        "       },",
                        "   \"${command:action}Response\" : ",
                        "       {",
                        "       }",
                        "}"
                    ]
                }
            ]
        }

    ]
 }